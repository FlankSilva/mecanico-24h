generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  phone         String
  address       String
  email         String    @unique
  password_hash String
  isAdmin       Boolean   @default(false)
  role          UserRole?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  mechanic       Mechanic?
  commissionaire Commissionaire?

  @@map("user")
}

model Mechanic {
  id               String   @id @default(uuid())
  userId           String   @unique
  specialties      String[]
  experience       Int
  cityId           String
  photoUrl         String?
  commissionaireId String?

  user           User            @relation(fields: [userId], references: [id])
  commissionaire Commissionaire? @relation(fields: [commissionaireId], references: [id])

  @@map("mechanic")
}

model Commissionaire {
  id         String @id @default(uuid())
  userId     String @unique
  uniqueCode String @unique
  referrals  Int    @default(0)
  commission Float  @default(0)

  user      User       @relation(fields: [userId], references: [id])
  mechanics Mechanic[]
  payments  Payment[]

  @@map("commissionaire")
}

enum UserRole {
  ADMIN
  MECHANIC
  COMMISSIONAIRE
}

model Payment {
  id               String        @id @default(uuid())
  commissionaireId String
  amount           Float
  paymentDate      DateTime      @default(now())
  status           PaymentStatus @default(pending)

  commissionaire Commissionaire @relation(fields: [commissionaireId], references: [id])
}

enum PaymentStatus {
  pending
  paid
  failed
}
